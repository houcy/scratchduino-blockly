{
  "name": "flatten-packages",
  "version": "0.1.4",
  "description": "flat packages in node_modules ",
  "main": "index.js",
  "bin": {
    "flatten-packages": "./bin/flatten"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/arifsetiawan/flatten"
  },
  "keywords": [
    "flatten",
    "flat",
    "node_modules",
    "package"
  ],
  "author": {
    "name": "Nurul Arif Setiawan",
    "email": "n.arif.setiawan@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/arifsetiawan/flatten/issues"
  },
  "dependencies": {
    "semver": "~2.2.1",
    "wrench": "~1.5.4",
    "commander": "~2.1.0",
    "colors": "~0.6.2"
  },
  "homepage": "https://github.com/arifsetiawan/flatten",
  "readme": "# Flatten Packages\r\n\r\nFlatten packages in node_modules\r\n\r\nNested node_modules are subjectively messy and sometimes we want it to be flat. Note that your node_modules might be exploded. Use it wisely.\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install -g flatten-packages\r\n```\r\n\r\n## How to use\r\n\r\nRun executable `flatten-packages` to rearrange all packages in node_modules folder in the project directory. Flatten will delete older version of a package. You should take care of version breaking changes related errors.\r\n\r\n```\r\n$ cd PROJECT_DIRECTORY\r\n$ flatten-packages\r\n```\r\n\r\nYou can specify `PROJECT_DIRECTORY` to flatten\r\n\r\n```\r\n$ flatten-packages PROJECT_DIRECTORY\r\n```\r\n\r\n`PROJECT_DIRECTORY` is a project directory, not a node_modules directory in `PROJECT_DIRECTORY`\r\n\r\n## Info mode\r\n\r\nYou can use info mode by adding `-i` to the command. It will list all duplicate packages. Info mode do not flatten `PROJECT_DIRECTORY`\r\n\r\n```\r\n$ flatten-packages PROJECT_DIRECTORY -i\r\n```\r\n\r\n## Print first level node_modules\r\n\r\nSometimes you need to fill dependency part of package.json. Use can use printed output using `-p`\r\n\r\n```\r\n$ flatten-packages PROJECT_DIRECTORY -p\r\n```\r\n\r\n## Automatic deployment\r\n\r\nWhen using automated deployment which will execute `npm install` before running your nodejs script, you will need to somehow execute `flatten-packages` after all dependencies are installed. \r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "Readme.md",
  "_id": "flatten-packages@0.1.4",
  "_shasum": "edc5f1ad09bdbad98a1e6332bd2917d0d9332193",
  "_from": "flatten-packages@~0.1.4",
  "_resolved": "https://registry.npmjs.org/flatten-packages/-/flatten-packages-0.1.4.tgz"
}
